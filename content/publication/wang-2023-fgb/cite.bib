@article{Wang:2023:FGB,
 abstract = {Step-and-project is a popular method to simulate non-penetrating deformable bodies in physically based animation. The strategy is to first integrate the system in time without considering contacts and then resolve potential intersections, striking a good balance between plausibility and efficiency. However, existing methods can be defective and unsafe when using large time steps, taking risks of failure or demanding repetitive collision testing and resolving that severely degrade performance. In this article, we propose a novel two-way method for fast and reliable continuous collision handling. Our method launches an optimization from both ends of the intermediate time-integrated state and the previous intersection-free state. It progressively generates a piecewise linear path and eventually obtains a feasible solution for the next time step. The algorithm efficiently alternates between a forward step and a backward step until the result is conditionally converged. Thanks to a set of unified volume-based contact constraints, our method offers flexible and reliable handling of various codimensional deformable bodies, including volumetric bodies, cloth, hair, and sand. Experimental results demonstrate the safety, robustness, physical fidelity, and numerical efficiency of our method, making it particularly suitable for scenarios involving large deformations or large time steps.},
 address = {New York, NY, USA},
 articleno = {167},
 author = {Wang, Tianyu and Chen, Jiong and Li, Dongping and Liu, Xiaowei and Wang, Huamin and Zhou, Kun},
 doi = {10.1145/3604551},
 issn = {0730-0301},
 issue_date = {October 2023},
 journal = {ACM Trans. Graph. (SIGGRAPH)},
 keywords = {nonlinear optimization, GPU computation, deformable body simulation, Collision handling},
 month = {jul},
 number = {5},
 numpages = {15},
 publisher = {Association for Computing Machinery},
 title = {Fast GPU-Based Two-Way Continuous Collision Handling},
 url = {https://doi.org/10.1145/3604551},
 volume = {42},
 year = {2023}
}
